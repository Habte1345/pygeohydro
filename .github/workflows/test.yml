name: CI

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
  pull_request:
    branches:
      - "**"
    tags-ignore:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: python ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      REPO_NAME: ${{ github.event.repository.name }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: [3.7, "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        run: |-
          echo "CONDA_ENV_FILE=ci/requirements/environment.yml" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Setup micromamba
        uses: mamba-org/provision-with-micromamba@70349b4364703bbe23d081f860de05f6510afe08
        with:
          environment-file: ${{ env.CONDA_ENV_FILE }}
          environment-name: ${{ env.REPO_NAME }}-tests
          extra-specs: |
            python=${{env.PYTHON_VERSION}}
          cache-env: true
          cache-env-key: "${{runner.os}}-${{runner.arch}}-py${{matrix.python-version}}-${{env.TODAY}}-${{hashFiles(env.CONDA_ENV_FILE)}}"

      # We only want to install this on one run, because otherwise we'll have
      # duplicate annotations.
      - name: Install error reporter
        if: ${{ matrix.os }} == 'ubuntu-latest' and ${{ matrix.python-version }} == '3.10'
        run: |
          python -m pip install pytest-github-actions-annotate-failures

      - name: Install the package
        run: |-
          mamba info -a
          mamba list
          python -m pip install --no-deps .
      - name: Version info
        run: |-
          python -c "import ${REPO_NAME}; ${REPO_NAME}.show_versions()"
      - name: Run pytest
        run: |-
          pytest
      - name: Run typeguard
        run: |-
          mamba install typeguard
          pytest --typeguard-packages=${REPO_NAME}
      - name: Run codecov and upload the report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false
